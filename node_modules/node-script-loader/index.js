/***

 This is the basic framework, which will be built upon. We basically take a directory as an 
 argument, then a callback function as an argument, and iteratively load each file in that 
 directory into the callback.
 
 ***/

// require file system
var fs = require("fs");

// require path
var path = require("path");

String.isNullOrEmpty = function (value) {
    return !value;
}


// loader function takes directory and a callback
var loader = function(dirName, objName, isGlobal, isExecute) {
    
    // set the app root so we can use relative path in our loader call
    var appRoot = process.cwd();
    
    // load the directory 
    var loadPath = path.join(appRoot, dirName);
    
    // loop through each file in the directory and then run the callback
    fs.readdirSync(loadPath).forEach(function(file) { 
    
        // make sure the callback is a function
        //typeof callback === 'function' && callback(file, dir);
        
        //TODO: maybe log an errors or eval the file
        
        // list our files
        console.log("Loading: "+dirName+"/"+file);
        
        // break the .js extension off 
        var moduleName = file.split(".");
  
        var moduleName[0] = require("./"+ dir +"/" + file);
        
        var mod; 
        
        // to assign a parent object to this load
        if (objName.isNullOrEmpty) {
            mod = [moduleName[0]];
        }
        else {
            mod = objName[moduleName[0]];
        }
  
  
    
    });
};

module.exports = loader;